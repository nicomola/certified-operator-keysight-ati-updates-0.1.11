apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "websocket.loadcore.keysight.com/v1alpha1",
          "kind": "Websocket",
          "metadata": {
            "name": "websocket-sample"
          },
          "spec": {
            "auth": {
              "clientId": "clt-wap",
              "enabled": true,
              "tokenEndpoint": "https://keycloak.kcos-sso.svc.cluster.local.:8443/auth/realms/keysight/protocol/openid-connect/token"
            },
            "cors": {
              "enabled": true
            },
            "database": {
              "enabled": true,
              "host": "wap-db-postgresql",
              "image": {
                "name": "bitnami/postgresql",
                "tag": "14.2.0-debian-10-r44"
              },
              "name": "wapdb",
              "port": 5432,
              "secret": {
                "key": "password",
                "name": "wap-db-postgresql-token"
              },
              "user": "user"
            },
            "fullnameOverride": "",
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "docker-virtual-wap.artifactorylbj.it.keysight.com",
              "tagSuffix": ""
            },
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {
                "nginx.ingress.kubernetes.io/proxy-body-size": "0",
                "nginx.ingress.kubernetes.io/ssl-redirect": "true"
              },
              "authAnnotations": {
                "nginx.ingress.kubernetes.io/auth-method": "POST",
                "nginx.ingress.kubernetes.io/auth-response-headers": "X-AUTH-USER",
                "nginx.ingress.kubernetes.io/auth-url": "https://127.0.0.1/token/validate",
                "nginx.ingress.kubernetes.io/configuration-snippet": "add_header Access-Control-Expose-Headers 'Content-Disposition';"
              },
              "corsAnnotations": {
                "nginx.ingress.kubernetes.io/cors-allow-credentials": "true",
                "nginx.ingress.kubernetes.io/cors-allow-headers": "authorization, x-requested-with, x-signalr-user-agent",
                "nginx.ingress.kubernetes.io/cors-allow-methods": "PUT, GET, POST, OPTIONS",
                "nginx.ingress.kubernetes.io/cors-allow-origin": "http://localhost:4200",
                "nginx.ingress.kubernetes.io/enable-cors": "true"
              },
              "enabled": true,
              "tls": [
                {
                  "hosts": [],
                  "secretName": "tls-secret"
                }
              ]
            },
            "ingressController": {
              "name": "kcos-ingress-ingress-nginx-controller",
              "namespace": "kcos-framework"
            },
            "logging": {
              "level": "info"
            },
            "nameOverride": "",
            "websocket": {
              "resources": {
                "limits": {
                  "cpu": "25m",
                  "memory": "100Mi"
                },
                "requests": {
                  "cpu": "25m",
                  "memory": "40Mi"
                }
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.22.2
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
  name: keysight-websocket-service.v0.0.19
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Websocket
      name: websockets.websocket.loadcore.keysight.com
      version: v1alpha1
  description: Keysight Websocket Service description. TODO.
  displayName: Keysight Websocket Service
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - websocket.loadcore.keysight.com
          resources:
          - websockets
          - websockets/status
          - websockets/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: keysight-websocket-service-controller-manager
      deployments:
      - label:
          control-plane: controller-manager
        name: keysight-websocket-service-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:latest
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=keysight-websocket-service
                image: prod.harbor.keysight.digital/loadcore/keysight-websocket-service:0.0.19
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 1Gi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: keysight-websocket-service-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: keysight-websocket-service-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - keysight-websocket-service
  links:
  - name: Keysight Websocket Service
    url: https://keysight-websocket-service.domain
  maintainers:
  - email: your@email.com
    name: Maintainer Name
  maturity: alpha
  provider:
    name: Provider Name
    url: https://your.domain
  version: 0.0.19
